System Description of auto detect and fix bugs found using Valgrind in programms written in C tool
 
Koronka je alat koji automatski otkriva greske u kodu napisanom u C-u koristeci alat Valgrind, 
a zatim ih ispravlja ukoliko je to u njegovoj moci. Razvijan pod Linux okruzenjem. Alat je nazvan 
Koronka, zbog trenutne situacije u kojoj se svi nalazimo. Alat je implementiran u Python-u. 
Osnovna svrha alata je demonstracija rada alata Valgrind, kao i automatsko tumacenje izvestaja o greskama koje 
Valgrind daje i njihovo uspesno otklanjanje.

Valgrind je platforma za pravljenje alata za dinamicku analizu. Dolazi sa setom alata, od kojih svaki 
obavlja neku vrstu debagovanja, profiliranja ili slicne zadatke koji pomazu da se poboljsaju programi koji se razvijaju. 

Valgrind se moze koristiti i kao alat za pravljenje novih alata, bez narusavanja postojecce strukture. 
Valgrind distribucija trenutno broji sledeÄ‡e alate:
	- detektor memorijskih gresaka (Memcheck)
	- detektor gresaka u radu sa nitima (Hellgrind i DRD)
	- profajler kes memorije i skokova (Cachegrind)
	- profajler poziva funkcija (Callgrind)
	- profajler koriscenja dinamicke memorije (Massif i DHAT)
	- eksperimentali alat za podrsku razvoja novih arhitektura racunara (BBV)

Rad se zasniva na Valgrind-ovom alatu Memcheck. Imlementirane su funkcionalnosti ispravljanja nekih od 
bagova na koje Memcheck ukazuje. Trenutna verzija alata ispravlja sledece greske:
	- nedozvoljeno citanje/pisanje u memoriju
	- koriscenje neinicijalizovanih vrednosti
	- nedopusteno oslobadjanje memorije
	- sumnjive vrednosti argumenata 
	- nevalidni argumenti sistemskih poziva
Sa daljim razvijanjem alata bice dodavane nove funkcionalnosti, a postojece ce biti unapredjene ukoliko je to moguce. 

						ALGORITAM IZVRSAVANJA

Na pocetku program kopira unete fajlove koji se propustaju kroz alat u novonapravljeni direktorijum u formatu
datumPokretanja-vremePokretanja i nad njima vrsi dalje promene. Prvo se kompajlira program, zatim se pokrece
alat Valgrind, i parsira se njegov izlaz. Ukoliko postoji greska koju alat moze da ispravi, on je ispravlja,
dodaje u ExecutionReport na osnovu cega i sta je uradjeno, i menja sta se treba promeniti u kodu programa. 
Nakon otklonjene greske u tekucoj iteraciji, pokrece se nova iteracija kompilacije, a zatim pokretanja 
Valgrinada i daljeg pokusavanja otklanjanja gresaka. Ukoliko program nema bagova, ili alat ne moze da ispravi
nijedan bag na koji je Valgrind ukazao, program se prekida.

	 _______________________________________________________________________
	|									|
	|								KOMPAJLIRAJ PROGRAM
	|									|
	|	 							POKRENI VALGRIND
	|									|
	|							PARSIRAJ IZLAZ (parseOutput.py)
	|						(izlaz: lista bagova na koje Valgrind ukazuje)
	|									|
	|							{uslov: lista bagova nije prazna}
	|					 _______________________________|_______________________
	|					|true							|false
	|		NADJI POZNATI BAG IZ LISTE (errorHandler.py)					|
	|					|							|
	|		{uslov: postoji bag koji moze biti ispravljen}					|
	|			________________|_______________					|
	|			|true				|false					|
	|		    ISPRAVI BAG				|					|
	|			|				|					|
	|		[unitialisedFix.py,			|					|
	|		invalidReadOrWriteFix.py,		|					|
	|		invalidFreeFix.py...]			|					|
	|			|				|					|
	|		(izlaz iz grane: 			|					|
	|		ispravljeni fajlovi,			|					|
	|		executionReport.txt)			|					|
	|______________________|				|					|
								|					|
								EXIT					EXIT
													
NAPOMENA : Sa daljim razvijanjem alata, algoritam se moze izmeniti.


					POKRETANJE ALATA

Nakon sto se pozicionirate u direktorijum u kom se nalazi koronka.py, alat se pokrece komandom:
			python koronka.py [files=[list of files]] [structures=[list of user defined structures]] 
					  [c file|path to c file] [other arguments] 

[other arguments] - argumenti koji su potrebni c programu kao argumenti komandne linije ( u trenutnoj verziji projekta)
[files = [list of files]] - dodatni fajlovi potrebni programu (npr. .h fajlovi)
[structures=[list of user defined structures]] - korisnicki definisane strukture (npr. Cvor stabla)

Primeri nad kojim je alat testiran nalaze se u direktorijumu Examples.			
