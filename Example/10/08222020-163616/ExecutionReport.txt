#####  Based on Valgrind output:  #####

Invalid read of size 4
at 0x1094AB: main (10.c:50)
Address 0x4a5a35c is 0 bytes after a block of size 12 alloc'd
at 0x483874F: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
by 0x109389: main (10.c:35)

#####  Koronka made following changes in 10.c  #####

Changed 35. line 
    if ((P[i]=malloc(n*sizeof(int)))==NULL){
 with 
    if ((P[i]=malloc(n*sizeof(int) + 1*sizeof(int)))==NULL){


#####  Based on Valgrind output:  #####

Conditional jump or move depends on uninitialised value(s)
at 0x48E2E40: __vfprintf_internal (vfprintf-internal.c:1644)
by 0x48CD8D7: printf (printf.c:33)
by 0x1094C3: main (10.c:50)
Uninitialised value was created by a heap allocation
at 0x483874F: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
by 0x10938D: main (10.c:35)

#####  Koronka made following changes in 10.c  #####

Changed 35. line 
    if ((P[i]=malloc(n*sizeof(int) + 1*sizeof(int)))==NULL){
 with 
    if ((P[i]=malloc(n*sizeof(int) + 1*sizeof(int)))!=NULL){
    	int __index__;
    	for( __index__ = 0; __index__ < n*1 + 1*1; __index__ ++)
    	    	P[i][__index__] = 0;
    }
    else if (P[i]==NULL){


